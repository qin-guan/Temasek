name: Docker

on:
  push:
    branches: [ "main", "wip" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: qin-guan/temasek-auth

jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          file: Temasek.Auth/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      - name: Deploy
        if: ${{ github.event_name != 'pull_request' }}
        concurrency:
          group: deploy
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            podman stop temasek-auth;
            podman pull ghcr.io/qin-guan/temasek-auth:main;
            podman run -d \
            	--name temasek-auth \
            	-p 8000:8080 \
            	-e ConnectionStrings__Default="DataSource=app.db" \
            	-e OpenIddict__Clients__0__ClientId="temasek-auth" \
            	-e OpenIddict__Clients__0__RedirectUris__0="https://hoppscotch.io/oauth" \
            	-e OpenIddict__Clients__0__RedirectUris__1="https://oauthdebugger.com/debug" \
                    -e OpenIddict__Clients__1__ClientId="calendarr" \
                    -e OpenIddict__Clients__1__RedirectUris__0="https://temasek-calendarr.from.sg/signin-oidc" \
                    -e OpenIddict__Clients__1__RedirectUris__1="https://localhost:7124/signin-oidc" \
                    -e OpenIddict__Clients__2__ClientId="operatorr" \
                    -e OpenIddict__Clients__2__RedirectUris__0="https://temasek-operatorr.from.sg/signin-oidc" \
                    -e OpenIddict__Clients__2__RedirectUris__1="https://localhost:7215/signin-oidc" \
            	-e FormGovSg__CallbackApiKey="${{ secrets.AUTH_FORMSG_CALLBACK_API_KEY }}" \
            	-e ASPNETCORE_FORWARDEDHEADERS_ENABLED="true" \
            	ghcr.io/qin-guan/temasek-auth:main;
